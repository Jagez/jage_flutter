List listData = [
  {
    "name": "Q_WS_WINCE_WM",
    "category": "Qt",
    "introdution":
        "Qt Wince 平台宏.Wince是微软公司嵌入式、移动计算平台的基础，它是一个开放的、可升级的32位嵌入式操作系统，是基于掌上型电脑类的电子设备操作系统，它是精简的Windows 95，Wince的图形用户界面相当出色。"
  },
  {
    "name": "Ajax",
    "category": "脚本",
    "introdution":
        "(Asynchronous JavaScript and XML的缩写）现在，允许浏览器与服务器通信而无须刷新当前页面的技术都被叫做Ajax.",
    "content":
        "虽然XMLHttpRequest的出现已经有近十个年头，但是Ajax这个概念却是直到2005年2月才被Adaptive Path公司负责用户体验策略的主管Jesse James Garrett正式提出。他在2005年2月18日发表了一篇题为《Ajax：A New Approach to Web Applications》（Ajax：一个Web应用的新途径）的论文，明确地将Ajax定义为Asynchronous JavaScript and XML，这就是Ajax这个名词的由来。 而Ajax技术应用的先驱和主要推动者则是著名的搜索引擎公司：Google。Google在2005年推出的Gmail，充分展示了Ajax的魅力所在，吸引了无数用户。从此，在全世界范围内逐渐刮起了一阵Ajax的旋风。  "
  },
  {
    "name": "MinGW(Windows下的GCC编译器)",
    "introdution":
        "MinGW，是Minimalist GNU for Windows的缩写。它是一个可自由使用和自由发布的Windows特定头文件和使用GNU工具集导入库的集合，允许你在GNU/Linux和Windows平台生成本地的Windows程序而不需要第三方C运行时（C Runtime）库。",
    "content":
        "MinGW 是一组包含文件和端口库，其功能是允许控制台模式的程序使用微软的标准C运行时（C Runtime）库（MSVCRT.DLL）,该库在所有的 NT OS 上有效，在所有的 Windows 95发行版以上的 Windows OS 有效，使用基本运行时，你可以使用 GCC 写控制台模式的符合美国标准化组织（ANSI）程序，可以使用微软提供的 C 运行时（C Runtime）扩展，与基本运行时相结合，就可以有充分的权利既使用 CRT（C Runtime）又使用 WindowsAPI功能。"
  },
  {
    "name": "POSIX",
    "introdution":
        "POSIX表示可移植操作系统接口（Portable Operating System Interface of UNIX，缩写为 POSIX ），POSIX标准定义了操作系统应该为应用程序提供的接口标准，是IEEE为要在各种UNIX操作系统上运行的软件而定义的一系列API标准的总称，其正式称呼为IEEE 1003，而国际标准名称为ISO/IEC 9945。",
    "content":
        " POSIX标准意在期望获得源代码级别的软件可移植性。换句话说，为一个POSIX兼容的操作系统编写的程序，应该可以在任何其它的POSIX操作系统（即使是来自另一个厂商）上编译执行。 POSIX 并不局限于 UNIX。许多其它的操作系统，例如 DEC OpenVMS 支持 POSIX 标准，尤其是 IEEE Std. 1003.1-1990（1995 年修订）或 POSIX.1，POSIX.1 提供了源代码级别的 C 语言应用编程接口（API）给操作系统的服务程序，例如读写文件。POSIX.1 已经被国际标准化组织（International Standards Organization，ISO）所接受，被命名为 ISO/IEC 9945-1:1990 标准。C/C++的标准库是指ANSI C/C++定义的标准库，这个是构成标准C/C++语言的基础。简称libc/libc++，常见的libc/libc++的实现有：UNIX C/C++，GUN C/C++，MicroSoft Visual C/C++ 在标准C/C++库基础上，兼容POSIX协议的C/C++库就是POSIX标准的C/C++库，这些C/C++库可以直接操作符合POSIX标准的操作系统调用。 常见的POSIX标准C/C++库有： 2.1 BSD，这个库是AOSP使用的标准C库。 2.2 Bionic，这个是BSD的衍生库，用于NDK开发 2.3 UNIX C/C++，GUN C/C++，MicroSoft Visual C/C++ "
  },
  {
    "name": "CMake",
    "category": "编译器",
    "introdution": "CMake是一个跨平台的安装（编译）工具，可以用简单的语句来描述所有平台的安装(编译过程)。",
    "content":
        "CMake能够输出各种各样的makefile或者project文件，能测试编译器所支持的C++特性,类似UNIX下的automake。只是 CMake 的组态档取名为 CMakeLists.txt。Cmake 并不直接建构出最终的软件，而是产生标准的建构档（如 Unix 的 Makefile 或 Windows Visual C++ 的 projects/workspaces），然后再依一般的建构方式使用。这使得熟悉某个集成开发环境（IDE）的开发者可以用标准的方式建构他的软件，这种可以使用各平台的原生建构系统的能力是 CMake 和 SCons 等其他类似系统的区别之处。",
    "function":
        "可以编译源代码、制作程式库。CMake 可以编译源代码、制作程序库、产生适配器（wrapper）、还可以用任意的顺序建构执行档。CMake 支持 in-place 建构（二进档和源代码在同一个目录树中）和 out-of-place 建构（二进档在别的目录里），因此可以很容易从同一个源代码目录树中建构出多个二进档。CMake 也支持静态与动态程式库的建构。 “CMake”这个名字是“cross platform make”的缩写。虽然名字中含有“make”，但是CMake和Unix上常见的“make”系统是分开的，而且更为高阶。"
  },
  {
    "name": "qmake",
    "category": "Qt",
    "introdution":
        "qmake是一个协助简化跨平台进行专案开发的构建过程的工具程式，Qt附带的工具之一 。qmake能够自动生成Makefile、Microsoft Visual Studio 专案文件 和 xcode 专案文件。不管源代码是否是用Qt写的，都能使用qmake，因此qmake能用于很多软件的构建过程",
    "content":
        "手写Makefile是比较困难而且容易出错，尤其在进行跨平台开发时必须针对不同平台分别撰写Makefile，会增加跨平台开发复杂性与困难度。qmake会根据专案文件（.pro）里面的信息自动生成适合平台的 Makefile。开发者能够自行撰写专案文件或是由qmake本身产生。qmake包含额外的功能来方便 Qt 开发，如自动的包含moc 和 uic 的编译规则。"
  },
  {
    "name": "Qt SDI与MDI",
    "category": "Qt",
    "introdution": "",
    "content":
        "一个窗口只能处理一个文档的程序称为：SDI（single document interface）.能处理多个文档的程序称为MDI(Multiple document interface)，Qt能够在所有操作系统平台上支持SDI和MDI程序。"
  },
  {
    "name": "Qt MOC( Meta-Object Compiler)",
    "category": "Qt",
    "introdution":
        "moc 全称是 Meta-Object Compiler，也就是“元对象编译器”。Qt 程序在交由标准编译器编译之前，先要使用 moc 分析 C++ 源文件",
    "content":
        "如果在moc操作头文件，找到了宏Q_OBJECT,则会生成一个C++源文件，这个源文件是将qt的源文件转换为C++源文件。即解析了该宏，将宏的实现都写到了C++源文件（moc_xx.cpp）。这个文件同样将进入编译系统，最终被链接到二进制代码中。新文件和旧文件一起编译的。生成moc文件是通过make来完成的。"
  },
  {
    "name": "酮症酸中毒",
    "category": "生物",
    "introdution":
        "酮体是肝脏中脂肪分解成脂肪酸的中间代谢产物，包括乙酰乙酸、β-羟丁酸和丙酮三种成分。 常见症状多饮多尿，体力及体重下降，食欲下降，恶心呕吐，呼吸中有酮臭味，脱水症状及甚至改变等 ",
    "content":
        "正常情况下，机体产生少量酮体，随着血液运送到心脏、肾脏和骨骼肌等组织，作为能量来源被利用，血中酮体浓度很低，一般不超过1.0毫克/分升，尿中也测不到酮体。当体内胰岛素不足或者体内缺乏糖分，如饥饿、禁食、严重的妊娠反应情况下，脂肪分解过多时，酮体浓度增高，一部分酮体可通过尿液排出体外，形成酮尿。当肝内酮体生成的量超过肝外组织的利用能力,血酮体浓度就会过高,导致酮血症和酮尿症。酮体中的乙酰乙酸和β-羟丁酸都是酸性物质，在血液中积蓄过多时，可使血液变酸而引起酸中毒，称为酮症酸中毒（ketoacidosis）。",
    "function": "病因：1.糖尿病酮症酸中毒  			2.饥饿性酮症 			3.酒精性酮症"
  },
  {
    "name": "蒜薹",
    "category": "植物",
    "introdution": "蒜薹，又称蒜毫，南方部分地区称之为蒜苗。它是从大蒜中抽出的花茎，蒜薹是很好的功能保健蔬菜，具有多种营养功效。",
    "content":
        "蒜薹性温，具有温中下气，补虚，调和脏腑，以及具有活血、防癌、杀菌的功效，对腹痛、腹泻有一定疗效。 杀菌作用 蒜薹含有辣素，其杀菌能力可达到青霉素的十分之一，对病原菌和寄生虫都有良好的杀灭作用，可以起到预防流感，防止伤口感染和驱虫的功效。 蒜薹中所含的大蒜素、大蒜新素，可以抑制金黄色葡萄球菌、链球菌、痢疾杆菌、大肠杆菌、霍乱弧菌等细菌的生长繁殖。 通便防痔 蒜薹外皮含有丰富的纤维素，可刺激大肠排便，调治便秘。多食用蒜薹，能预防痔疮的发生，降低痔疮的复发次数，并对轻中度痔疮有一定的治疗效果。 防治疾病作用 蒜薹中含有丰富的维生素C具有明显的降血脂及预防冠心病和动脉硬化的作用，并可防止血栓的形成。它能保护肝脏，诱导肝细胞脱毒酶的活性，可以阻断亚硝胺致癌物质的合成，从而预防癌症的发生。",
    "function":
        " 			搭配食用 1.蒜薹加生菜。 两者同食，可以杀菌消炎，降压降脂，益智补脑，防止牙龈出血，清理内热，以及补充维生素C缺乏。 2.蒜薹加木耳。 蒜薹对于脾胃虚弱、泄泻不止、毒疮水肿等病症有辅助治疗作用；木耳则益气养肥、凉血止血、降脂减肥。两者同食，其效大增。 注意事项 1.蒜薹主要用于炒食，或做配料。不宜烹制得过烂，以免辣素被破坏，杀菌作用降低。 2.消化能力不佳的人最好少食蒜薹；过量食用蒜薹可能会影响视力；蒜薹有保护肝脏的作用，但过多食用则反而损害肝脏，可能造成肝功能障碍，使肝病加重。 3.蒜薹与地黄、何首乌、蜂蜜和大葱都不宜同食。"
  },
  {
    "name": "YAGNI",
    "category": "术语",
    "introdution": "NA",
    "content": "You aren't gonna need it.用于对抗预测将来需求的强烈冲动。",
    "function": "NA"
  },
  {
    "name": "JUnit",
    "category": "Android",
    "introdution":
        "JUnit是用于编写和运行可重复的自动化测试的开源测试框架， 这样可以保证我们的代码按预期工作。JUnit可广泛用于工业和作为支架(从命令行)或IDE(如Eclipse)内单独的Java程序。",
    "content":
        " JUnit提供：      断言测试预期结果。     测试功能共享通用的测试数据。     测试套件轻松地组织和运行测试。     图形和文本测试运行。  JUnit用于测试：      整个对象     对象的一部分 - 交互的方法或一些方法     几个对象之间的互动(交互)",
    "function":
        "  JUnit的特点      JUnit是用于编写和运行测试的开源框架。      提供了注释，以确定测试方法。      提供断言测试预期结果。      提供了测试运行的运行测试。      JUnit测试让您可以更快地编写代码，提高质量      JUnit是优雅简洁。它是不那么复杂以及不需要花费太多的时间。      JUnit测试可以自动运行，检查自己的结果，并提供即时反馈。没有必要通过测试结果报告来手动梳理。      JUnit测试可以组织成测试套件包含测试案例，甚至其他测试套件。      Junit显示测试进度的，如果测试是没有问题条形是绿色的，测试失败则会变成红色。"
  },
  {
    "name": "世界语(Esperanto)",
    "category": "NA",
    "introdution":
        "世界语是波兰籍犹太人柴门霍夫博士于1887年创立的一种语言，旨在消除国际交流中的语言障碍，令全世界各个种族肤色的人民都能在同一个人类大家族中像兄弟姐妹一样和睦相处。",
    "content":
        "世界语已经成为了目前国际上使用最为广泛的国际辅助语，全球150多个国家和地区都有世界语组织和世界语者。早在1954年，联合国教科文组织就正式把国际世界语协会列为教科文组织B级咨询关系单位，确定了国际世界语协会在联合国和教科文组织的正式地位。联合国协会世界联合会对世界语也采取了积极的态度。",
    "function": "语言代码： 			ISO 639-1：eo ISO 639-2：epo ISO/DIS 639-3：epo"
  },
  {
    "name": "哥德尔不完全性定理",
    "introdution":
        "哥德尔是奥地利裔美国著名数学家，不完备性定理是他在1931年提出来的。这一理论使数学基础研究发生了划时代的变化，更是现代逻辑史上很重要的一座里程碑。该定理与塔尔斯基的形式语言的真理论，图灵机和判定问题，被赞誉为现代逻辑科学在哲学方面的三大成果。哥德尔证明了任何一个形式系统，只要包括了简单的初等数论描述，而且是自洽的，它必定包含某些系统内所允许的方法既不能证明真也不能证伪的命题。 			第一定理 任意一个包含一阶谓词逻辑与初等数论的形式系统，都存在一个命题，它在这个系统中既不能被证明为真，也不能被证明为否。 第二定理 如果系统S含有初等数论，当S无矛盾时，它的无矛盾性不可能在S内证明。",
    "content": "他告诉我们，真与可证是两个概念。可证的一定是真的，但真的不一定可证。",
    "function":
        "根据哥德尔不完全性定理，矛盾之处在于用同一规则并不能完全证明该同一规则所属体系下的所有事物。如任一同一规则体系（国际象棋），都有无法被证明真伪的命题（如王逃到某一处最安全），再次体系外或许可证明（某处）。"
  },
  {
    "name": "RFC(Request For Comments)",
    "category": "文档",
    "introdution":
        "RFC是一系列以编号排定的文件。文件收集了有关互联网相关信息，以及UNIX和互联网社区的软件文件。目前RFC文件是由Internet Society（ISOC）赞助发行。基本的互联网通信协议都有在RFC文件内详细说明。RFC文件还额外加入许多的论题在标准内，例如对于互联网新开发的协议及发展中所有的记录。因此几乎所有的互联网标准都有收录在RFC文件之中。",
    "content":
        "一个RFC文件在成为官方标准前一般至少要经历4个阶段【RFC2026】：因特网草案、建议标准、草案标准、因特网标准。RFC文件格式最初作为ARPA网计划的基础起源于1969年。如今，它已经成为IETF、Internet Architecture Board (IAB）还有其他一些主要的公共网络研究社区的正式出版物发布途径。RFC文档大致可以分为以下几类。1.STD RFC 2.BCP RFC 3.FYI RFC 4.其他RFC。",
    "function":
        "RFC(Request For Comments)-意即“请求评议”，包含了关于Internet的几乎所有重要的文字资料。如果你想成为网络方面的专家，那么RFC无疑是最重要也是最经常需要用到的资料之一，所以RFC享有网络知识圣经之美誉。"
  },
  {
    "name": "Baal-Peor 巴尔毗珥",
    "introdution": "",
  },
  {
    "name": "莱顿弗罗斯特效应",
    "category": "物理",
    "introdution":
        "莱顿弗罗斯特现象（Leidenfrost Phenomenon）是指液体不会润湿炙热的表面，而仅仅在其上形成一个蒸汽层的现象，由科学家莱顿弗罗斯特在1756年发现。",
    "content":
        "1756年有一位名叫莱顿弗罗斯特的科学家在一把烧的通红的铁勺上滴上一滴水珠，水珠竟然悬浮起来并持续30秒，莱顿弗罗斯特效应水滴能够悬浮起来的原因在于，接触炙热的铁勺后，水滴底部立即形成一层水蒸汽，把水珠与铁勺隔开，就使得水滴悬浮起来，悬浮起来的水滴暂时不能吸收更多的热量，减慢了汽化速度，因此悬浮可以持续30秒，这就是莱顿弗罗斯特效应。水的莱顿弗罗斯特点会随着水中含有的杂质、滚烫物件的材质、水的温度等而改变，粗略量度下水在平底锅的莱顿弗罗斯特点为约193°C。",
    "function":
        "厨师在预热锅子时，只要落下几滴水看会否形成水珠，便可得知锅子是否够热。[2]在传统的过火仪式，参加者会先沾湿双脚，由于莱顿弗罗斯特现象令水不会快速升温，使得热不容易传到人们的脚，即使人们走在火堆之上，只要不长时间接触炭火，也不易被烧得火红的炭火烫伤。另外，依照莱顿弗罗斯特现象的原理，液态氮会在手上迅速沸腾并形成隔热层，防止手冻伤，因此便可徒手触摸液态氮。[3][4]《流言终结者》（MythBusters）亦曾在节目中利用莱顿弗罗斯特现象，尝试把手沾湿后放进烧熔的铅里。"
  },
  {
    "name": "迈斯纳效应",
    "category": "物理",
    "introdution":
        "迈斯纳效应是超导体从一般状态相变至超导态的过程中对磁场的排斥现象，于1933年时被瓦尔特·迈斯纳与罗伯特·奥克森菲尔德在量度超导锡及铅样品外的磁场时发现。在有磁场的情况下，样品被冷却至它们的超导相变温度以下。在相变温度以下时，样品几乎抵消掉所有里面的磁场。他们只是间接地探测到这个效应；因为超导体的磁通量守恒，当里面的场减少时，外面的场就会增加。这实验最早证明超导体不只是完美的导电体，并为超导态提供一个独特的定义性质。当一个磁体和一个处于超导态的超导体相互靠近时，磁体的磁场会使超导体表面中出现超导电流。此超导电流在超导体内部形成的磁场，恰好和磁体的磁场大小相等，方向相反。这两个磁场抵消，使超导体内部的磁感应强度为零，B=0，即超导体排斥体内的磁场。",
    "content":
        "在弱场下，超导体几乎“排斥”掉所有的磁通量，磁力线无法穿透超导体。它通过在其表面建立起电流来达到这点。这些表面电流的磁场与外加的磁场在超导体内互相抵消。由于场排斥（或抵消）并不随时间而改变，所以导致这效应的电流（又称持久电流）并不会因时间而减弱。因此电导率可被视为无限：即超导体。 在接近表面的一定距离内，磁场并不会被完全抵消，这个距离被称为伦敦穿透深度。每一种超导体都有其特有的穿透深度。 任何完美的零电阻导电体都会因为简单的电磁感应现象，阻止通过其表面的磁通量改变。然而，超导体的迈斯纳效应跟这个有区别：当为了在外加磁场下到达超导态，而冷却一般导电体时，磁通量在相变期间会被排斥。这样的效应无法只用无限电导率来解释。产生迈斯纳效应的原因是：当超导体处于超导态时，在磁场作用下，表面产生一个无损耗感应电流。这个电流产生的磁场恰恰与外加磁场大小相等、方向相反，因而在深入超导区域总合成磁场为零。换句话说，这个无损耗感应电流对外加磁场起着屏蔽作用，因此称它为抗磁性屏蔽电流。因为对于电阻率ρ无限小的理想导体，根据欧姆定律E=ρJ，若ρ=0，则由麦克斯韦方程组▽×E=-δB/δt=0，由此可知在加磁场前后理想导体体内磁感应强度不发生变化，即B=C≠0，C为加入磁场前导体体内的磁感应强度。而超导体的迈斯纳效应要求深入超导区B=0。"
  },
  {
    "name": "视觉错觉",
    "category": "视觉错觉",
    "introdution":
        "错觉是指人们对外界事物的不正确的感觉或知觉。最常见的是视觉方面的错觉。产生错觉的原因，除来自客观刺激本身特点的影响外，还有观察者生理上和心理上的原因。其机制现在尚未完全弄清。",
    "content":
        "你很容易被自己的视觉系统所欺骗。我们通常认为我们能以同样的清晰度看清楚视野内的任何东西，但如果我们的眼睛在短时间内保持不动，就会发现这是错误的。只有接近注视中心，才能看到物体的细节，越偏离视觉中心，对细节的分辨能力越差，到了视野的最外围，甚至连辨别物体都困难。 在日常生活中这一点之所以显得不明显，是由于我们很容易不断移动眼睛，使我们产生了各处物体同样清晰的错觉。此外还有许多可以让眼睛产生错觉的图案，如让眼睛产生“错觉轮廓”的卡尼莎三角等。 发生在视网膜上和大脑皮层细胞在简单图形的加工过程中的影响.这种螺旋效应可能由这些区域的方位敏感性细胞造成.例如,连续的视觉效果是V1视皮层上'相似'细胞之间的水平连接.成对细胞间交叉相联的模式并非完全固定不变的,随者环境的变化而稍微改变.细胞间相互影响,使视网膜上形成的简单的连续的线由于方向性单元格而倾斜,造成错觉.视觉是大脑的一个功能， 产生错觉原因不一：传导神经受到麻痹或干扰；外界不良刺激的突然袭扰；用眼疲劳，工作时间过长；大脑迷糊的时候；大脑感官分析错误；还有一些专门会产生视觉错误和幻觉的图片（挺有意思的）；再有就是一些特殊的原因，估计用不上. 错觉是歪曲的知觉，也就是把实际存在的事物被歪曲地感知为与实际事物完全不相符的事物。",
    "function":
        "视觉错觉除了广泛运用在军事领域之外，也被众多企业，设计师运用在日常生活领域。通过视觉错觉原理，可以有效地改变人对空间信息的接收，可以改变人和空间的交互感受。比如可以通过视觉错觉原理改变“眼中”的方位，大小，甚至是呈现美好的精致，画面。"
  },
  {
    "name": "贾斯特罗错觉",
    "category": "视觉错觉",
    "introdution":
        "贾斯特罗错觉（Jastrow illusion）是指两条等长的曲线，包含在下的一条比上面一条看上去会长一些；同样，两个完全一样的扇形环，包含在下面的扇形环比上面的扇形环看上去大些的视错觉现象。 贾斯特罗错觉是一种光学错觉，发现于1889年。两个大小一样的扇形，记上方的为A，下方的为B。因为摆放位置的不同，导致欺骗视觉比较长边与短边，产生误差的现象。如左图所示，两个完全一样的扇形，但看起来A比B要小。",
    "content":
        "圆内外圈半径不等，角度相同，弧长不等。在比较物品大小时，人会不自觉的用两个物品相邻的两边来做比较，进而将长边和短边进行比较，大脑就会将拥有较长的一边物体分辨成比较大的那一个。"
  },
  {
    "name": "完形崩溃(语义饱和) Semantic satiation",
    "category": "视觉错觉",
    "introdution":
        "完形崩溃（也称语义饱和）是一种心理现象，重复一个词或短语暂时认为词或短语重复无意义的意思。脑内类似面部神经元的汉字神经元，长时间看一个汉字，汉字神经元就会产生疲劳，便会影响感官机能，这时熟悉的字，人也会对其形态产生怀疑而觉得不像甚至变得不认识了，这就是完形崩溃。"
  },
  {
    "name": "迈斯纳效应",
    "category": "科学术语",
    "introdution":
        "迈斯纳效应是超导体从一般状态相变至超导态的过程中对磁场的排斥现象，于1933年时被瓦尔特·迈斯纳与罗伯特·奥克森菲尔德在量度超导锡及铅样品外的磁场时发现。",
    "content":
        "在有磁场的情况下，样品被冷却至它们的超导相变温度以下。在相变温度以下时，样品几乎抵消掉所有里面的磁场。他们只是间接地探测到这个效应；因为超导体的磁通量守恒，当里面的场减少时，外面的场就会增加。这实验最早证明超导体不只是完美的导电体，并为超导态提供一个独特的定义性质。"
  },
  {
    "name": "日柱（大气光学现象）",
    "category": "大气光学现象",
    "introdution":
        "日柱是指当天气很冷而太阳正好升起或落下时，大气的片状冰晶反射阳光所产生的位于太阳正上或正下方垂直延伸的光柱的现象，一般只持续1分钟左右。",
    "content":
        "当冰晶从高层的云落下时，有时会有平板形状的冰晶。当天气很冷而太阳正好升起或落下时，大气的冰晶会反射阳光并产生一道罕见的光柱。空气阻力使得这些冰晶在落向地面时，几乎是水平的。被冰晶反射的阳光因此几乎完全是垂直的，因此产生日柱效应。这种现象一般发生在零下二十摄氏度左右。日柱现象的产生主要是在日出或者日落的时候，但是需要有低温的配合才会出现，因为只有温度够低，空气中才有可能形成冰晶。日柱的出现，对冰晶的形状要求比较高，只有遇到扁平状的冰晶，它才能够在垂直角度上反射出太阳光。"
  },
  {
    "name": "荧光剂",
    "introdution":
        "荧光增白剂是一种荧光染料，或称为白色染料，是一种复杂的有机化合物。它的特性是能吸收入射光线产生荧光，使所染物质获得类似荧石的闪闪发光的效应，使肉眼看到的物质很白，达到增白的效果。",
    "content":
        "荧光剂不像一般化学成分那样容易被分解，而是在人体内蓄积，产生许多有害的作用，大大削减人体免疫力；荧光剂与伤口外的蛋白质结合，会阻碍伤口的愈合；荧光剂能使人体细胞出现变异性倾向，其毒性累积在肝脏或其他重要器官，会成为潜在的致癌因素。造成血液系统受损：化学物质容易污染人体血液，虽然血液具有一定的自净能力，微量的有害物质进入其中，会被稀释、分解、吸附和排出，但长期、大量的有毒物质倾注而入，必致其发生质的变化；进入血液循环，会破坏红细胞的细胞膜，引起溶血现象。"
  },
  {
    "name": "PhysX",
    "introdution":
        "是一套由AGEIA（音译为“阿吉亚”或“奥加”）公司开发（后来被Nvidia收购）的物理运算引擎；也是世界三大物理运算引擎之一，另外两种是Havok和Bullet。PhysX物理引擎的演示程序 的另外一种含义是指专门计算PhysX引擎的物理加速卡。可以在Windows，Linux，Xbox360，Playstation3，Mac，Android等在内的全平台上运行。",
    "content":
        "加速卡 			由于PhysX物理引擎在设计上就并不适合用CPU去计算，因此AGEIA公司还为PhysX引擎设计了专门的运算硬件，PhysX物理加速卡。PhysX物理加速卡的核心被称为PPU，即物理处理器（Physics processing Unit）。 PhysX物理加速卡在运行游戏时不参与任何3D渲染，只计算PhysX引擎。按照AGEIA当初的设想，未来的个人电脑将由CPU、GPU、PPU三大核心构成。其中CPU居中调度，GPU负责图形渲染，PPU则做物理计算。  2006年，AGEIA公司发布了第一张PhysX物理加速卡，称为PhysX 100 Series。公版设计为搭载128MB GDDR3显存，采用PCI接口。生产PhysX 100 Series的包括华硕和BFG，其中华硕的PhysX物理加速卡搭载了256MB GDDR3显存。 后来，AGEIA公司又开发了第二代PhysX物理加速卡，称为PhysX 200 Series，与第一代产品最大的不同在于采用了PCI-E插槽，增强了数据交换能力。 AGEIA公司被Nvidia收购后，PhysX物理加速卡停止了开发。但有评测表明，PhysX 100 Series的PhysX物理计算能力，超过了Geforce 9600GT，至少与Geforce 9800GT相当。 [1]  可见PhysX物理加速卡在设计思路上是非常成功的。 基于PhysX SDK 2.8.1及其以下版本开发的游戏都支持AGEIA PhysX物理加速卡。需要说明的是，部分基于PhysX SDK 2.8.1开发的游戏是被人为屏蔽物理加速卡而造成物理加速卡无法工作的，例如《一舞成名》和《蝙蝠侠：阿卡姆疯人院》，这种情况是可以通过修改驱动破解的。但是基于PhysX SDK 2.8.3及其以上版本、基于PhysX APEX开发的游戏就无法支持AGEIA PhysX物理加速卡了。  加速技术 NVIDIA PhysX承袭自AGEIA PhysX，但Nvidia在此基础上推出了NVIDIA PhysX物理加速，并将PhysX物理加速功能移植到NVIDIA GPU中，用户不必额外购买PhysX物理加速卡就能享受到PhysX物理加速功能。借助CUDA架构，NVIDIA重新编写了PhysX物理加速程序，将PhysX物理加速引擎从AGEIA PPU移植到了NVIDIA GPU上。 通过重新编写程序，NVIDIA GPU中的线程调度器将承担原来PPU中“控制引擎”的工作，即负责具体任务的指派工作；流处理器将承担原来PPU中“矢量处理引擎”的工作，即负责物理计算；在物理计算完成后，由DME来负责输出；而后，GPU再通过硬件抽象层实现布料模拟、毛发模拟、碰撞侦测、流体力学等物理技术。简而言之，就是利用CUDA，将PhysX引擎中的计算指令，翻译给GPU，让GPU去计算。这样做是因为GPU具有优秀的浮点计算能力和并行处理能力。所谓PhysX物理加速，是指相对于CPU来讲，GPU加快了PhysX物理引擎的计算速度。并不是说PhysX引擎只能由NVIDIA GPU处理。"
  },
  {
    "name": "迪米特法则（Law of Demeter）",
    "introdution":
        "又叫作最少知识原则（Least Knowledge Principle 简写LKP），就是说一个对象应当对其他对象有尽可能少的了解,不和陌生人说话。英文简写为: LoD.如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中的一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。",
    "content":
        "迪米特法则的初衷在于降低类之间的耦合。由于每个类尽量减少对其他类的依赖，因此，很容易使得系统的功能模块功能独立，相互之间不存在（或很少有）依赖关系。 迪米特法则不希望类之间建立直接的联系。如果真的有需要建立联系，也希望能通过它的友元类来转达。因此，应用迪米特法则有可能造成的一个后果就是：系统中存在大量的中介类，这些类之所以存在完全是为了传递类之间的相互调用关系——这在一定程度上增加了系统的复杂度。朋友圈的确定 “朋友”条件： 1）当前对象本身（this） 2）以参量形式传入到当前对象方法中的对象 3）当前对象的实例变量直接引用的对象 4）当前对象的实例变量如果是一个聚集，那么聚集中的元素也都是朋友 5）当前对象所创建的对象 任何一个对象，如果满足上面的条件之一，就是当前对象的“朋友”；否则就是“陌生人”。",
    "function": "门面模式和调停者模式（中介者模式）实际上就是迪米特法则的应用。"
  },
  {
    "name": "第一类公民(First-class Citizen)",
    "introdution":
        "第一类公民、第一类对象(不特指面向对象里的”对象”)、第一类实体、第一类值(这些概念都是一个，只是叫法不同)是支持其他实体所有操作的实体。通常实体是指各种各样的数据类型和值，比如对象、类、函数、字面量等，一般讨论都是指函数是不是第一类对象(first-class object)。操作(这些实体所具有的操作有):  可以作为变量或者数据结构存储 可以作为参数传递给方法/函数 可以作为返回值从函数/方法返回 可以在运行期创建 有固有身份  “固有身份”是指实体有内部表示，而不是根据名字来识别，比如匿名函数，还可以通过赋值叫任何名字。大部分语言的基本类型的数值(int, float)等都是第一类对象；但是数组不一定，比如C中的数组，作为函数参数时，传递的是第一个元素的地址，同时还丢失了数组长度信息。对于大多数的动态语言，函数/方法都是第一类对象，比如Python，但是Ruby不是，因为不能返回一个方法。第一类函数对函数式编程语言来说是必须的。",
    "content":
        "Algol中，实数可以出现在表达式，或者被赋值给一个变量，两者(表达式，变量)都可以作为实际参数传递给子程序调用。但是子程序，只能作为一个操作数或者一个实际参数出现在另一个子程序调用中。没有表达式与子程序有关联，表达式的返回值也不能是子程序。所以从某种意义上来说，Algol中的子程序是二等公民，它们只能独自出现，不能被一个变量或者表达式表示(除非是形式参数)… "
  },
  {
    "name": "斐波那契数列（Fibonacci sequence）",
    "category": "数学",
    "introdution":
        "又称黄金分割数列、因数学家列昂纳多·斐波那契（Leonardoda Fibonacci）以兔子繁殖为例子而引入，故又称为“兔子数列”，指的是这样一个数列：1、1、2、3、5、8、13、21、34、……在数学上，斐波纳契数列以如下被以递推的方法定义：F(1)=1，F(2)=1, F(n)=F(n-1)+F(n-2)（n>=3，n∈N*）在现代物理、准晶体结构、化学等领域，斐波纳契数列都有直接的应用，为此，美国数学会从1963年起出版了以《斐波纳契数列季刊》为名的一份数学杂志，用于专门刊载这方面的研究成果。",
    "content":
        "有趣的是，这样一个完全是自然数的数列，通项公式却是用无理数来表达的。而且当n趋向于无穷大时，前一项与后一项的比值越来越逼近黄金分割0.618（或者说后一项与前一项的比值小数部分越来越逼近0.618）。斐波那契数列中的斐波那契数会经常出现在我们的眼前——比如松果、凤梨、树叶的排列、某些花朵的花瓣数（典型的有向日葵花瓣），蜂巢，蜻蜓翅膀，超越数e（可以推出更多），黄金矩形、黄金分割、等角螺线，十二平均律等。斐波那契数还可以在植物的叶、枝、茎等排列中发现。例如，在树木的枝干上选一片叶子，记其为数0，然后依序点数叶子（假定没有折损），直到到达与那些叶子正对的位置，则其间的叶子数多半是斐波那契数。叶子从一个位置到达下一个正对的位置称为一个循回。叶子在一个循回中旋转的圈数也是斐波那契数。在一个循回中叶子数与叶子旋转圈数的比称为叶序（源自希腊词，意即叶子的排列）比。多数的叶序比呈现为斐波那契数的比。随着数列项数的增加，前一项与后一项之比越来越逼近黄金分割的数值0.6180339887..…",
    "function":
        "三角形的三边关系定理和斐波那契数列的一个联系： 现有长为144cm的铁丝，要截成n小段（n>2），每段的长度不小于1cm，如果其中任意三小段都不能拼成三角形，则n的最大值为多少？"
  },
  {
    "name": "Vtk（visualization toolkit）视觉化工具函式库",
    "introdution":
        "是一个开源的免费软件系统，主要用于三维计算机图形学、图像处理和可视化。Vtk是在面向对象原理的基础上设计和实现的，它的内核是用C++构建的，包含有大约250,000行代码，2000多个类，还包含有几个转换界面，因此也可以自由的通过Java，Tcl/Tk和Python各种语言使用vtk。",
    "content":
        "VTK是一个开放源码、自由获取的软件系统，全世界的数以千计的研究人员和开发人员用它来进行3D计算机图形，图像处理，可视化。VTK包含一个c++类库，众多的翻译接口层，包括Tcl/Tk，Java,Python。 Visualization Toolkit 是一个用于可视化应用程序构造与运行的支撑环境，它是在三维函数库OpenGL 的基础上采用面向对象的设计方法发展起来的，它将我们在可视化开发过程中会经常遇到的细节屏蔽起来，并将一些常用的算法封装起来。比如 Visualization Toolkit 将我们在表面重建中比较常见的MarchingCubes 算法封装起来，以类的形式给我们以支持，这样我们在对三维规则点阵数据进行表面重建时就不必再重复编写MarchingCubes 算法的代码，而直接使用Visualization Toolkit 中已经提供的vtkMarchingCubes 类。 Visualization Toolkit 是给从事可视化应用程序开发工作的研究人员提供直接的技术支持的一个强大的可视化开发工具"
  },
  {
    "name": "UML Unified Modeling Language",
    "category": "软件设计",
    "introdution":
        "统一建模语言是非专利的第三代建模和规约语言。UML是一种开放的方法，用于说明、可视化、构建和编写一个正在开发的、面向对象的、软件密集系统的制品的开放方法。UML展现了一系列最佳工程实践，这些最佳实践在对大规模，复杂系统进行建模方面，特别是在软件架构层次已经被验证有效。这个语言由葛来迪·布区，伊瓦尔·雅各布森与詹姆士·兰宝于1994年至1995年间，在Rational Software公司中开发，于1996年，又进一步发展。UML集成了Booch，OMT和面向对象软件工程的概念，将这些方法融合为单一的，通用的，并且可以广泛使用的建模语言。UML打算成为可以对并发和分布式系统的标准建模语言。 [1]  UML并不是一个工业标准，但在Object Management Group的主持和资助下，UML正在逐渐成为工业标准。OMG之前曾经呼吁业界向其提供有关面向对象的理论及实现的方法，以便制作一个严谨的软件建模语言（Software Modeling Language）。有很多业界的领袖亦真诚地回应OMG，帮助它建立一个业界标准。",
    "content":
        "在UML系统开发中有三个主要的模型： 功能模型：从用户的角度展示系统的功能，包括用例图。 对象模型：采用对象，属性，操作，关联等概念展示系统的结构和基础，包括类别图、对象图。 动态模型：展现系统的内部行为。包括序列图，活动图，状态图。 区分UML模型和UML图是非常重要的，UML图，包括用例图、协作图、活动图、序列图、部署图、构件图、类图、状态图，是模型中信息的图形表达方式，但是UML模型独立于UML图存在。UML的当前版本只提供了模型信息的交换，而没有提供图信息的交换。 UML使用一套与Java语言或其他面向对象语言等价物，同时也是本体论等价物的图形标记。 UML并不是一个方法学，也不要求使用一个方法学，但是UML对于Rational统一过程来说是必不可少的。UML从来源中使用相当多的概念。我们将之定义于统一建模语言术语汇表。下面仅列代表性的概念。 对于结构而言 执行者，属性，类，元件，接口，对象，包。 对于行为而言 活动（UML），事件（UML），消息（UML），方法（UML），操作（UML），状态（UML），用例（UML）。 对于关系而言 聚合，关联，组合，相依，广义化（or继承）。 其他概念 构造型—这规范符号应用到的模型 多重性—多重性标记法与资料库建模基数对应，例如：1, 0..1, 1..*  角色"
  },
  {
    "name": "OCL（Object Constraint Language）",
    "introdution": "对象约束语言是一种用于施加在指定的模型元素上约束的语言。"
  },
  {
    "name": "明胶",
    "introdution":
        "食用明胶(Gelatin)是胶原的水解产物，是一种无脂肪的高蛋白，且不含胆固醇，是一种天然营养型的食品增稠剂。食用后既不会使人发胖，也不会导致体力下降。明胶亦是一种强有力的保护胶体，乳化力强，进入胃后能抑制牛奶、豆浆等蛋白质因胃酸作用而引起的凝聚作用，从而有利于食物消化。",
    "content":
        "物理特性： 	食用明胶为白色或浅黄褐色、半透明、微带光泽的脆片或粉末，几乎无臭、无味。不溶于冷水，但能吸收5倍量的冷水而膨胀软化。溶于热水，冷却后形成凝胶。可溶于乙酸、甘油、丙二醇等多元醇的水溶液。不溶于乙醇、乙醚、氯仿及其他多数非极性有机溶剂。 	化学性质 食用明胶比琼脂的凝固力弱，浓度5%以下时不凝固。通常以10%～15%的溶液形成凝胶。胶凝化温度随浓度及共存盐类的种类、浓度溶液的pH等因素而异。溶解温度与凝固温度相差很小，约30℃溶解，20～25℃时凝固。其凝胶比琼胶柔软，富有弹性，口感柔软。其水溶液长时间沸煮，因分解而性质发生变化，冷却后不再形成凝胶，如再加热则变成蛋白和胨。明胶溶液如受甲醛作用，则变成不溶于水的不可逆凝胶。",
    "function":
        "食用明胶是利用猪、牛、羊等动物的骨和皮的胶原．通过变性降解加工而成．含有8种以上的L一型氨基酸，是一种纯蛋白．不含脂肪和胆固醇．极易被人体吸收，用毛制成的明胶食品．对某些疾病有一定的疗效，特别是儿童童发育有理想的营养价值。"
  },
  {
    "name": "FLTK (Fast Light Tool Kit) ",
    "introdution":
        "是一种使用C++开发的GUI工具包，它可以应用于Unix，Linux，MS-Windows95/98/NT/2000和MacOS操作系统平台，相对于其它的许多图形接口开发工具包（如MFC、GTK、QT等），它具有体积很小、速度比较快，且有着更好的移植性。本文就FLTK编程的一些基本方法进行介绍。",
    "function":
        "1.	提供丰富的跨平台的GUI构件(Widget)。有按钮，菜单，窗口等，近六十个。  2.	支持OpenGL，提供Fl_GL_Window，支持OpenGL相关的操作。  3.	提供界面设计工具FLUID，非常方便进行界面的设计。  4.	良好的跨平台移植性。  5.	支持多种C++编译器，Gcc，BC，VC等等。  6.	灵活性。FLTK本身可以定制，以满足不同的需要。这使得FLTK在嵌入式开发上有着极大的竞争力，这正是我要推荐使用FLTK的原因。"
  },
  {
    "name": "ffmepg",
    "category": "ISO标准",
    "introdution":
        "Moving Picture Experts Group，动态图像专家组。是ISO（International Standardization Organization，国际标准化组织）与IEC（International Electrotechnical Commission，国际电工委员会）于1988年成立的专门针对运动图像和语音压缩制定国际标准的组织。"
  },
  {
    "name": "MPEG",
    "introdution": "",
  },
  {
    "name": "CGI（Common Gateway Interface）通用网关接口",
    "introdution":
        "公共网关接口（Common Gateway Interface，CGI）是Web 服务器运行时外部程序的规范，按CGI 编写的程序可以扩展服务器功能。CGI 应用程序能与浏览器进行交互，还可通过数据API与数据库服务器等外部数据源进行通信，从数据库服务器中获取数据。",
    "content":
        "几乎所有服务器都支持CGI，可用任何语言编写CGI，包括流行的C、C ++、VB 和Delphi 等。CGI分为标准CGI和间接CGI两种。标准CGI使用命令行参数或环境变量表示服务器的详细请求，服务器与浏览器通信采用标准输入输出方式。间接CGI又称缓冲CGI，在CGI程序和CGI接口之间插入一个缓冲程序，缓冲程序与CGI接口间用标准输入输出进行通信"
  },
  {
    "name": "Perl（Practical Extraction and Report Language）实用报表提取语言",
    "introdution":
        "Perl 最初的设计者为拉里·沃尔（Larry Wall），它于1987年12月18日发表。Perl借取了C、sed、awk、shell scripting以及很多其他程序语言的特性。一般，“Perl”，有大写的 P，是指语言本身，而“perl”，小写的 p，是指程序运行的解释器。"
  },
  {
    "name": "GPL：GNU通用公共许可证（GNU General Public License）",
    "introdution": "修改和使用其代码都需要开源，但是这是建立在软件分发的基础上，如果使用代码作为服务提供，而不分发软件，则不需要开源。"
  },
  {
    "name": "AGPL：The GNU Affero General Public License",
    "introdution": "除非获得商业授权，否则无论以何种方式修改或者使用代码，都需要开源。"
  },
  {
    "name": "FBO: OpenGL Frame BufferObject",
    "category": "OpenGL",
    "introdution": "",
    "content":
        "在OpenGL渲染管线中，几何数据和纹理经过多次转化和多次测试，最后以二维像素的形式显示在屏幕上。OpenGL管线的最终渲染目的地被称作帧缓存（framebuffer）。帧缓冲是一些二维数组和OpenG所使用的存储区的集合：颜色缓存、深度缓存、模板缓存和累计缓存。一般情况下，帧缓存完全由window系统生成和管理，由OpenGL使用。这个默认的帧缓存被称作“window系统生成”（window-system-provided）的帧缓存。"
  }
];
